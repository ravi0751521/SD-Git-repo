---
  - name: Provision an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning

    vars:
      instance_type: t2.micro
      security_group: webservers
      image: ami-0080e4c5bc078760e
      region: us-east-1
      keypair: sshkeypair
      count: 1

    tasks:

      - name: Create New security group with below given name
        local_action:
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for Newly Created EC2 Instance
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0


      - name: Launch the new t2 micro EC2 Instance
        local_action: ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: Wait for EC2 Instance to Spin-up and ready for SSH access
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"
      
      -name: Add the user 'javauser' with a specific uid and a primary group of 'admin'
        user:
         name: javauser
         comment: Javauser
         uid: 1040
         group: admin
         become_user: javauser
   
      -name: install java dependencies on ec2
       apt: 
         name: Default-jre
         state: installed
      -name: check java version 
       command: java --version

      -name: Deploy a java service from your github application
       git:
         repo: 'https://football.example.org/path/to/repo.git'
         dest: /home/ubuntu
      -name: Copy the logs to custome logs directory
       lineinfile: 
         path: <user.home>/.java/deployment/log
         regexp: 'Logs_dir'
         line: /var/log/<appName>/out.log
       -name : pick the config file from the custome path
       src: path/from origin of the proprty file
          dest: /etc/<appName>/config/<propertiesFile>    
          
